/**

@file decart_tree.hpp
@brief Заголовочный файл с описанием класса DTree */
/**

@class DTree
@brief Класс, представляющий декартово дерево
@details Декартово дерево - это бинарное дерево поиска, где каждому узлу сопоставлено два значения: ключ и приоритет.
Узлы дерева упорядочены по ключу и выстроены по приоритету. */
class DTree {
public:
/**
* @brief Конструктор по умолчанию
*/
DTree();
/**
 * @brief Конструктор с параметром
 * @param x Ключ корневого узла
 */
DTree(int x);

/**
 * @brief Конструктор копирования
 * @param other Дерево, которое нужно скопировать
 */
DTree(DTree &other);

/**
 * @brief Конструктор перемещения
 * @param other Дерево, которое нужно переместить
 */

DTree(DTree &&other);
/**
 * @brief Деструктор
 */
~DTree();

/**
 * @brief Вставить элемент в дерево
 * @param x Ключ элемента
 */
void insert(int x);

/**
 * @brief Удалить элемент из дерева
 * @param x Ключ элемента
 */
void remove(int x);

/**
 * @brief Проверить, есть ли элемент в дереве
 * @param x Ключ элемента
 * @return true, если элемент найден, иначе false
 */
bool find(int x);

/**
 * @brief Получить вектор со всеми элементами дерева в порядке обхода в ширину
 * @return Вектор с ключами элементов
 */
std::vector<int> get_vector();
